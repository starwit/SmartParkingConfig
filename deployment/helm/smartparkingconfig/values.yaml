# Default values for smartparkingconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: docker.internal.starwit-infra.de/smartparkingconfig
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.1"

imagePullSecrets:
  - name: docker-starwit-internal
nameOverride: ""
fullnameOverride: ""

pullSecret:
  user: "user"
  password: "password"

app:
  context_path: "/smartparkingconfig"
  profile: auth

auth:
  included_keycloak:
    enabled: false
  mode: extern # possible values: disabled, included, extern
  keycloak_url: https://hostname/realms/smartparkingconfig
  client_id: smartparkingconfig
  client_credential: smartparkingconfig

postgresql:
  auth:
    database: smartparkingconfig
    username: smartparkingconfig
    password: smartparkingconfig

keycloak:
  auth:
    adminUser: admin
    adminPassword: adminadmin
  proxy: edge
  ingress:
    enabled: true
    autoGenerated: false
    hostname: auth.wob.starwit-infra.de
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls: true
  postgresql:
    nameOverride: "keycloak-postgresql"
    auth:
      password: bn_keycloak
  keycloakConfigCli:
    enabled: true
    configuration:
      smartparkingconfig.json: |
        {
          "enabled": true,
          "realm": "smartparkingconfig",
          "clients": [
            {
              "clientId": "smartparkingconfig",
              "name": "smartparkingconfig",
              "description": "smartparkingconfig",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "secret": "smartparkingconfig",
              "redirectUris": [
                "https://auth.wob.starwit-infra.de/*"
              ],
              "webOrigins": [
                "+"
              ]
            }
          ],
          "clientScopes": [
            {
              "name": "roles",
              "protocol": "openid-connect",
              "protocolMappers": [
                {
                  "name": "realm roles",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-realm-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "multivalued": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "foo",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "realm_access.roles",
                    "jsonType.label": "String"
                  }
                }
              ]
            }
          ],
          "roles": {
            "realm": [
              {
                "name": "admin",
                "composite": false,
                "clientRole": false
              }
            ]
          },
          "users": [
            {
              "username": "test",
              "email": "test@example.com",
              "enabled": true,
              "firstName": "Test",
              "lastName": "User",
              "credentials": [
                {
                  "type": "password",
                  "value": "test"
                }
              ],
              "realmRoles": [
                "admin"
              ]
            }
          ]
        }

extraEnv: |
  - name: JAVA_TOOL_OPTIONS
    value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5000
  - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
    value: INFO
#   - name: LOGGING_LEVEL_ROOT
#     value: DEBUG

ingress:
  enabled: true
  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: pm.wob.starwit-infra.de
      paths:
        - path: /smartparkingconfig
          pathType: ImplementationSpecific
  tls: 
    - secretName: pm.wob.starwit-infra.de
      hosts:
        - pm.wob.starwit-infra.de

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources:
  limits:
    memory: "2300Mi"
